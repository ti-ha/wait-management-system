Week 1: 

We had an initial meeting to discuss the assignment. We selected the Wait
Management System as our topic. We began writing the proposal. I was assigned
to elaborate on two of the existing systems. We had a discussion a few days after our 
initial meeting to discuss who would work on which user stories. I did the ones pertaining to 
Restaurant Management.

Week 2: 
In our tutorial, we finished the writeup of the user stories, including 8 epic stories and their
sub-stories. We have not given any thought to programming just yet but have assigned different people
different tasks within the design of the program. I was assigned to work on the backend.

Week 3: 
We finished the proposal in our Wednesday tutorial. I drew a rudimentary UML diagram which will serve as
basic design of the backend.
On Saturday, we met up to initialise the environments of the frontend, backend, data and REST API layer.
I initialised and configured the Python virtual environment while Sami set up and walked the team through running
the React.js frontend layer. As a team, we discussed how best to implement a Postgres data layer into our project.

Week 4:
Coding has begun! We split the team up (loosely) into 2 frontend and 3 backend developers.
I am a backend developer for the project until I am needed elsewhere. Together with Gordon and Ravi, I wrote the
basic class structure skeleton, including class files (one for each class), establishing inheritance where
appropriate, and constructors. We don't really have a plan as to who is coding what part of the backend
following a first-come-first-serve system. I coded the Menu subsystem and fixed some bugs that made their way in 
when I was setting up. I also implemented the rest api for the menu classes, leaving only the database connection 
functionality to be completed for that subsystem.

Week 5:
The team has been further split into 1 frontend developer, 2 backend developers and 2 data/testing developers.
I am still a backend developer together with Gordon. My main task for this week was to write the Order Management stories,
which I completed. There were a lot of bugs to fix which I spent most of Wednesday ironing out. On Wednesday we had our demo
which went well I think - our code ran and performed well. There's a lot of tech debt caused by the time crunch which we'll spend
next week resolving, thankfully with no deadline.

After wednesday we were all exhausted so we took the rest of the week off. I think in the next sprint we'll take full advantage
of having double the amount of time we had for this sprint, not so much to get double the work done, but to stave off burnout a 
bit better.

Week 6 (flex week):
We had a meeting on Monday about what to get done this week. The consensus was that we don't want to do anything extensive this week.
So, to compromise and still keep progress moving, we're going to pay off the tech debt accumulated in the code,
but we're not going to add any new functionality into the backend specifically. This gives time for the database
team to catch up. The frontend will work on implementing a few outstanding API calls and then UX. Database team will
aim to have database persistence implemented by the end of the week.